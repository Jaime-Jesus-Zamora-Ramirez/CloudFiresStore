// Generated by view binder compiler. Do not edit!
package edu.mx.unipolidgo.myfirebaseproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.mx.unipolidgo.myfirebaseproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMenuBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageProduct;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textPrice;

  @NonNull
  public final TextView textSize;

  private ItemMenuBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageProduct,
      @NonNull TextView textDescription, @NonNull TextView textName, @NonNull TextView textPrice,
      @NonNull TextView textSize) {
    this.rootView = rootView;
    this.imageProduct = imageProduct;
    this.textDescription = textDescription;
    this.textName = textName;
    this.textPrice = textPrice;
    this.textSize = textSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageProduct;
      ImageView imageProduct = ViewBindings.findChildViewById(rootView, id);
      if (imageProduct == null) {
        break missingId;
      }

      id = R.id.textDescription;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.textPrice;
      TextView textPrice = ViewBindings.findChildViewById(rootView, id);
      if (textPrice == null) {
        break missingId;
      }

      id = R.id.textSize;
      TextView textSize = ViewBindings.findChildViewById(rootView, id);
      if (textSize == null) {
        break missingId;
      }

      return new ItemMenuBinding((ConstraintLayout) rootView, imageProduct, textDescription,
          textName, textPrice, textSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
