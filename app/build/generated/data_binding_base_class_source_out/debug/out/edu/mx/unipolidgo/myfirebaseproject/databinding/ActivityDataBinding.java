// Generated by view binder compiler. Do not edit!
package edu.mx.unipolidgo.myfirebaseproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.mx.unipolidgo.myfirebaseproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnReadData;

  @NonNull
  public final Button btnUploadData;

  @NonNull
  public final EditText editDescription;

  @NonNull
  public final EditText editImage;

  @NonNull
  public final EditText editName;

  @NonNull
  public final EditText editPrice;

  @NonNull
  public final EditText editSize;

  private ActivityDataBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnReadData,
      @NonNull Button btnUploadData, @NonNull EditText editDescription, @NonNull EditText editImage,
      @NonNull EditText editName, @NonNull EditText editPrice, @NonNull EditText editSize) {
    this.rootView = rootView;
    this.btnReadData = btnReadData;
    this.btnUploadData = btnUploadData;
    this.editDescription = editDescription;
    this.editImage = editImage;
    this.editName = editName;
    this.editPrice = editPrice;
    this.editSize = editSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnReadData;
      Button btnReadData = ViewBindings.findChildViewById(rootView, id);
      if (btnReadData == null) {
        break missingId;
      }

      id = R.id.btnUploadData;
      Button btnUploadData = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadData == null) {
        break missingId;
      }

      id = R.id.editDescription;
      EditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.editImage;
      EditText editImage = ViewBindings.findChildViewById(rootView, id);
      if (editImage == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.editPrice;
      EditText editPrice = ViewBindings.findChildViewById(rootView, id);
      if (editPrice == null) {
        break missingId;
      }

      id = R.id.editSize;
      EditText editSize = ViewBindings.findChildViewById(rootView, id);
      if (editSize == null) {
        break missingId;
      }

      return new ActivityDataBinding((ConstraintLayout) rootView, btnReadData, btnUploadData,
          editDescription, editImage, editName, editPrice, editSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
